{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"a parallel, open-source geothermal flow simulator Waiwera features: numerical simulation of high-temperature subsurface flows, including robust phase changes parallel execution on shared- or distributed-memory computers and clusters use of PETSc (Portable Extensible Toolkit for Scientific Computation) for parallel data structures, linear and non-linear solvers, etc. standard file formats for input ( JSON ) and output ( HDF5 , YAML ) structured, object-oriented code written in Fortran 2003 free, open-source license Waiwera was developed at the University of Auckland's Geothermal Institute . Initial development was part of the \"Geothermal Supermodels\" research project, funded by the NZ Ministry of Business, Innovation and Employment ( MBIE ), with additional support from Contact Energy Ltd . The word Waiwera comes from the M\u0101ori language and means \"hot water\".","title":"Introduction"},{"location":"contrib/","text":"Contributing to Waiwera Because Waiwera is released under a free, open-source license , you may contribute code. Waiwera's source code is written in Fortran 2003, so you will need to be familiar with that in order to contribute. You will also need to know how to use the Git version control system. Pull requests You can contribute code to Waiwera by submitting a \" pull request \". To do this, first you need to fork the Waiwera repository and check it out onto your local machine. You can commit your changes locally and then push them back up to your fork on Github. Finally, you can make a pull request on the Waiwera repository. Your proposed changes will then be reviewed, discussed and altered as necessary. If it is agreed that your changes are appropriate then they will be merged into the Waiwera code. Unit tests Waiwera uses a test-driven development cycle, so in general any new code should be accompanied by unit tests to make sure it works correctly. Waiwera uses the Zofu library for creating unit tests. Reporting issues You can also help improve Waiwera by reporting any issues .","title":"Contributing"},{"location":"contrib/#contributing-to-waiwera","text":"Because Waiwera is released under a free, open-source license , you may contribute code. Waiwera's source code is written in Fortran 2003, so you will need to be familiar with that in order to contribute. You will also need to know how to use the Git version control system.","title":"Contributing to Waiwera"},{"location":"contrib/#pull-requests","text":"You can contribute code to Waiwera by submitting a \" pull request \". To do this, first you need to fork the Waiwera repository and check it out onto your local machine. You can commit your changes locally and then push them back up to your fork on Github. Finally, you can make a pull request on the Waiwera repository. Your proposed changes will then be reviewed, discussed and altered as necessary. If it is agreed that your changes are appropriate then they will be merged into the Waiwera code.","title":"Pull requests"},{"location":"contrib/#unit-tests","text":"Waiwera uses a test-driven development cycle, so in general any new code should be accompanied by unit tests to make sure it works correctly. Waiwera uses the Zofu library for creating unit tests.","title":"Unit tests"},{"location":"contrib/#reporting-issues","text":"You can also help improve Waiwera by reporting any issues .","title":"Reporting issues"},{"location":"install/","text":"Installation Waiwera can be run on most operating systems (e.g. Linux, Windows, Mac OS) using Docker . For many users this will be the easiest option. Linux users also have the option of building a native Waiwera executable . For full details, see the installation instructions in the Waiwera user guide. Using Docker When using Docker , Waiwera is run in a \"container\" holding the code and all its dependencies, isolated from the host machine, so that it should always run the same way. First, Docker itself needs to be installed. Installing Docker For Windows users, the Windows 10 Pro, Enterprise or Education versions are recommended, in which case Docker Desktop can be used. For other Windows versions, the older Docker Toolbox can be used, but this is less convenient and has a higher performance overhead than Docker Desktop. Similarly, users of macOS version 10.13 or later can use Docker Desktop, but users of older versions can use Docker Toolbox. Linux users can install Docker from their package management system. Installing PyWaiwera The easiest way to run Waiwera via Docker is by using the waiwera-dkr script, which is supplied as part of the PyWaiwera Python library. This can be installed from the Python Package Index (PyPI) using pip install pywaiwera . Running using Docker The waiwera-dkr script handles installing and updating the Waiwera Docker container image, running Waiwera in the container, and managing the sharing of files between the container and your simulation directory. Native Linux build Building a native Waiwera executable on Linux systems can be carried out using Ansible , which manages checking and installing any necessary tools (compilers, build tools etc.), building dependency libraries and building Waiwera itself (which is done using the Meson build system). This is essentially a three-step process: installing Ansible, cloning or downloading the Waiwera source code, and building the Waiwera executable.","title":"Installation"},{"location":"install/#installation","text":"Waiwera can be run on most operating systems (e.g. Linux, Windows, Mac OS) using Docker . For many users this will be the easiest option. Linux users also have the option of building a native Waiwera executable . For full details, see the installation instructions in the Waiwera user guide.","title":"Installation"},{"location":"install/#using-docker","text":"When using Docker , Waiwera is run in a \"container\" holding the code and all its dependencies, isolated from the host machine, so that it should always run the same way. First, Docker itself needs to be installed.","title":"Using Docker"},{"location":"install/#installing-docker","text":"For Windows users, the Windows 10 Pro, Enterprise or Education versions are recommended, in which case Docker Desktop can be used. For other Windows versions, the older Docker Toolbox can be used, but this is less convenient and has a higher performance overhead than Docker Desktop. Similarly, users of macOS version 10.13 or later can use Docker Desktop, but users of older versions can use Docker Toolbox. Linux users can install Docker from their package management system.","title":"Installing Docker"},{"location":"install/#installing-pywaiwera","text":"The easiest way to run Waiwera via Docker is by using the waiwera-dkr script, which is supplied as part of the PyWaiwera Python library. This can be installed from the Python Package Index (PyPI) using pip install pywaiwera .","title":"Installing PyWaiwera"},{"location":"install/#running-using-docker","text":"The waiwera-dkr script handles installing and updating the Waiwera Docker container image, running Waiwera in the container, and managing the sharing of files between the container and your simulation directory.","title":"Running using Docker"},{"location":"install/#native-linux-build","text":"Building a native Waiwera executable on Linux systems can be carried out using Ansible , which manages checking and installing any necessary tools (compilers, build tools etc.), building dependency libraries and building Waiwera itself (which is done using the Meson build system). This is essentially a three-step process: installing Ansible, cloning or downloading the Waiwera source code, and building the Waiwera executable.","title":"Native Linux build"},{"location":"issues/","text":"Issues Any issues, e.g. bug reports or feature requests, can be reported via the issue tracker on our Github repository. Check existing issues Before you report a new issue, please check through the existing issues first to make sure nobody else has already reported it. If they have, you may add a comment (if necessary) to the existing issue. Bug reports If you are making a bug report, please include as much detail as possible to help us identify the bug.","title":"Issues"},{"location":"issues/#issues","text":"Any issues, e.g. bug reports or feature requests, can be reported via the issue tracker on our Github repository.","title":"Issues"},{"location":"issues/#check-existing-issues","text":"Before you report a new issue, please check through the existing issues first to make sure nobody else has already reported it. If they have, you may add a comment (if necessary) to the existing issue.","title":"Check existing issues"},{"location":"issues/#bug-reports","text":"If you are making a bug report, please include as much detail as possible to help us identify the bug.","title":"Bug reports"},{"location":"license/","text":"License Waiwera is free, open-source software released under the GNU Lesser General Public License ( LGPL version 3), with source code available from our Github repository . Amongst other things, this means: anyone may potentially contribute code to Waiwera if you make modifications to your own copy of the Waiwera code, you are legally obliged to share those modifications back with the Waiwera project","title":"License"},{"location":"license/#license","text":"Waiwera is free, open-source software released under the GNU Lesser General Public License ( LGPL version 3), with source code available from our Github repository . Amongst other things, this means: anyone may potentially contribute code to Waiwera if you make modifications to your own copy of the Waiwera code, you are legally obliged to share those modifications back with the Waiwera project","title":"License"},{"location":"news/","text":"What's new? Waiwera 1.1 released 31 January 2020 - Waiwera version 1.1 is now released. This is a significant update and includes the following changes: MINC mesh rebalancing : after MINC processing, the mesh is redistributed to regain optimal load balancing, and hence better scaling behaviour for large parallel MINC problems. This entailed a substantial rewrite of parts of the Waiwera MINC code. PETSc update : PETSc version 3.12 or later is now required (some of its new features and bugfixes are needed for the MINC mesh rebalancing). If PETSc is not found on the system, version 3.12.3 will be downloaded and built. PyWaiwera : this is a new Python library for working with Waiwera simulations. Its source is in the main Waiwera source tree under /utils/pywaiwera , and it can be installed from PyPI using pip . For now, it contains only code related to running Waiwera via Docker, either from Python scripts or from the command line, for which it installs an executable waiwera-dkr script (which replaces the previous waiwera-dkr.py script). In future it is invisaged that other modules will be added to PyWaiwera, for assisting with pre- and post-processing. the new waiwera-dkr script includes many improvements and some new features, for example downloading example model input files using the --examples option. continuous integration (CI) using Travis for automated building/testing of Waiwera. additional log file messages for reporting simulation degrees of freedom and imbalance statistics, as well as linear solver iteration counts Waiwera 1.0 released 24 November 2019 - Waiwera version 1.0 has just been released, after five years of development and testing. The Waiwera team would like to thank everyone who contributed to making this possible, including MBIE and Contact Energy for financial support; Matt Knepley and others on the PETSc team, for invaluable advice and support; and Joseph Levin for developing the FSON library.","title":"News"},{"location":"news/#whats-new","text":"","title":"What's new?"},{"location":"news/#waiwera-11-released","text":"31 January 2020 - Waiwera version 1.1 is now released. This is a significant update and includes the following changes: MINC mesh rebalancing : after MINC processing, the mesh is redistributed to regain optimal load balancing, and hence better scaling behaviour for large parallel MINC problems. This entailed a substantial rewrite of parts of the Waiwera MINC code. PETSc update : PETSc version 3.12 or later is now required (some of its new features and bugfixes are needed for the MINC mesh rebalancing). If PETSc is not found on the system, version 3.12.3 will be downloaded and built. PyWaiwera : this is a new Python library for working with Waiwera simulations. Its source is in the main Waiwera source tree under /utils/pywaiwera , and it can be installed from PyPI using pip . For now, it contains only code related to running Waiwera via Docker, either from Python scripts or from the command line, for which it installs an executable waiwera-dkr script (which replaces the previous waiwera-dkr.py script). In future it is invisaged that other modules will be added to PyWaiwera, for assisting with pre- and post-processing. the new waiwera-dkr script includes many improvements and some new features, for example downloading example model input files using the --examples option. continuous integration (CI) using Travis for automated building/testing of Waiwera. additional log file messages for reporting simulation degrees of freedom and imbalance statistics, as well as linear solver iteration counts","title":"Waiwera 1.1 released"},{"location":"news/#waiwera-10-released","text":"24 November 2019 - Waiwera version 1.0 has just been released, after five years of development and testing. The Waiwera team would like to thank everyone who contributed to making this possible, including MBIE and Contact Energy for financial support; Matt Knepley and others on the PETSc team, for invaluable advice and support; and Joseph Levin for developing the FSON library.","title":"Waiwera 1.0 released"},{"location":"pubs/","text":"Publications Conference papers O'Sullivan, J.P, Croucher, A.E., Yeh, A. and O'Sullivan, M.J. (2017). Experiments with Waiwera, a new geothermal simulator . Proceedings of the 39 th New Zealand Geothermal Workshop, Rotorua, New Zealand. Croucher, A.E., O'Sullivan, M.J., O'Sullivan, J.P, Pogacnik, J., Burnell, J. and Kissling, W. (2017). Geothermal Supermodels project: an update on flow simulator development . Proceedings of the 39 th New Zealand Geothermal Workshop, Rotorua, New Zealand. Croucher, A.E., O'Sullivan, M.J., O'Sullivan, J.P, Pogacnik, J., Burnell, J. and Kissling, W. (2016). Geothermal Supermodels project: an update on flow simulator development . Proceedings of the 38 th New Zealand Geothermal Workshop, Auckland, New Zealand. Croucher, A.E., O'Sullivan, M.J., O'Sullivan, J.P, Pogacnik, J., Yeh, A., Burnell, J. and Kissling, W. (2016). Geothermal Supermodels project: an update on flow simulator development . Proceedings of the 37 th New Zealand Geothermal Workshop, Taupo, New Zealand.","title":"Publications"},{"location":"pubs/#publications","text":"","title":"Publications"},{"location":"pubs/#conference-papers","text":"O'Sullivan, J.P, Croucher, A.E., Yeh, A. and O'Sullivan, M.J. (2017). Experiments with Waiwera, a new geothermal simulator . Proceedings of the 39 th New Zealand Geothermal Workshop, Rotorua, New Zealand. Croucher, A.E., O'Sullivan, M.J., O'Sullivan, J.P, Pogacnik, J., Burnell, J. and Kissling, W. (2017). Geothermal Supermodels project: an update on flow simulator development . Proceedings of the 39 th New Zealand Geothermal Workshop, Rotorua, New Zealand. Croucher, A.E., O'Sullivan, M.J., O'Sullivan, J.P, Pogacnik, J., Burnell, J. and Kissling, W. (2016). Geothermal Supermodels project: an update on flow simulator development . Proceedings of the 38 th New Zealand Geothermal Workshop, Auckland, New Zealand. Croucher, A.E., O'Sullivan, M.J., O'Sullivan, J.P, Pogacnik, J., Yeh, A., Burnell, J. and Kissling, W. (2016). Geothermal Supermodels project: an update on flow simulator development . Proceedings of the 37 th New Zealand Geothermal Workshop, Taupo, New Zealand.","title":"Conference papers"},{"location":"userguide/","text":"User guide The online Waiwera user guide can be found on its Read The Docs page . A PDF version may be downloaded here .","title":"User guide"},{"location":"userguide/#user-guide","text":"The online Waiwera user guide can be found on its Read The Docs page . A PDF version may be downloaded here .","title":"User guide"}]}